input {
  file {
    path => "D:\00-DEV\mongodb\log\mongo.log"
    type => "mongodb"
  }
}

filter {
  grok { pattern => ["(?m)%{GREEDYDATA} \[conn%{NUMBER:mongoConnection}\] %{WORD:mongoCommand} %{NOTSPACE:mongoDatabase} %{WORD}: \{ %{GREEDYDATA:mongoStatement} \} %{GREEDYDATA} %{NUMBER:mongoElapsedTime:int}ms"] }
  grok { pattern => [" cursorid:%{NUMBER:mongoCursorId}"] }
  grok { pattern => [" ntoreturn:%{NUMBER:mongoNumberToReturn:int}"] }
  grok { pattern => [" ntoskip:%{NUMBER:mongoNumberToSkip:int}"] }
  grok { pattern => [" nscanned:%{NUMBER:mongoNumberScanned:int}"] }
  grok { pattern => [" scanAndOrder:%{NUMBER:mongoScanAndOrder:int}"] }
  grok { pattern => [" idhack:%{NUMBER:mongoIdHack:int}"] }
  grok { pattern => [" nmoved:%{NUMBER:mongoNumberMoved:int}"] }
  grok { pattern => [" nupdated:%{NUMBER:mongoNumberUpdated:int}"] }
  grok { pattern => [" keyUpdates:%{NUMBER:mongoKeyUpdates:int}"] }
  grok { pattern => [" numYields: %{NUMBER:mongoNumYields:int}"] }
  grok { pattern => [" locks\(micros\) r:%{NUMBER:mongoReadLocks:int}"] }
  grok { pattern => [" locks\(micros\) w:%{NUMBER:mongoWriteLocks:int}"] }
  grok { pattern => [" nreturned:%{NUMBER:mongoNumberReturned:int}"] }
  grok { pattern => [" reslen:%{NUMBER:mongoResultLength:int}"] }
}

output {
  stdout {
  codec => json
  }
}
